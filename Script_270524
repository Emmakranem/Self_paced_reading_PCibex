 PennController.ResetPrefix(null)

// Generates random number assigned to participants 
var randomCode = Math.random().toString(36).substr(2,9)
// A message to show to participants at completion (useful for confirmation, raffle entry, etc.)
var completionMessage = "Thank you for your participation. You may close the window now. Your participation code is: " +
randomCode

// Assign ID
Header(
    newVar("ID").global()    
)
.log( "id" , getVar("ID")) // Add the ID to all trials' results lines

// Set the order of the elements of experiment and randomize experimental items
Sequence("Consent",
        "Intro-1",        
        "Practice",
        "Intro-3", 
        randomize("Experiment"))


// Consent
newTrial("Consent",
    defaultText.center().print()
    ,
     newText("Consent1", "<p> In order to continue, please provide your consent to participate in this experiment.</p>")
        .css("font-size","1.8em")
        .bold()
    ,
     newText("Consent2","See the document in the link below if you would like to review the information sheet.")
         .css("margin","1.8em")
         .print()
    ,
    newText("Consent3", "<p> Click link to open <a href=https://drive.google.com/file/d/14ppqLElOxPqZlerkn1uSvIAMR9OqX5Wy/view?usp=sharing target='_blank'>the consent form in a new tab<a/>.</p>")
        .print()
    ,
     newButton("consent button", "I consent")
        .center()
        .css("font-size","1.8em")
        .print()
        .wait()
    )

// Instructions
newTrial("Intro-1",
    defaultText
        .center()
        .print()
    ,
    newText("instructions-1", "Welcome!")
    ,
    newText("instructions-2", "<p>In this experiment, you are going to read some stories and verify statements about them. After reading the part of the story that you see on the screen, you must hit the spacebar to see the next part.</p>")
    ,
    newText("instructions-3", "<b>Please read at a normal pace and make sure you understand the text. Hit the spacebar to continue. Keep your thumbs at the spacebar, your left index finger on the F key, and your right index finger on the J key (as shown on image below).</b>")
    ,
    newText("instructions-4", "<p>First, you will do two practice trials.</p>")
    ,
    newImage("finger-position", "fingers.png")
        .center()
        .print()
    ,
    newButton("wait", "Click to start the practice trials")
        .center()
        .print()
        .wait()
)

// Practice trials

Template("dummy_materials_160524_practice.csv", row =>
    newTrial("Practice",
        defaultText.center().print("center at 50vw","middle at 50vh"),
        newController("DashedSentence", {s: `${row.Practice}`, display: "in place", hideUnderscores: true})
            .css("white-space","nowrap")
            .center()
            .print()
            .log()
            .wait(),
        // Conditionally display comprehension question
        (row.Question === "Yes" ? [
            newText(`<p>${row.QuestionSentence}</p>`)
                .css(`font-size`, `1.4em`)
                .print(),
            newText("key-info", "Press F for FALSE and J for TRUE")
                .print(),
            newKey("keypress-question", "FJ")
                .log()
                .wait()
        ] : [])
    )
    .log("Figure", row.Figure)
    .log("Context", row.Context)
    .log("Group", row.Group)
);

// Transition from practice to experiment 
newTrial("Intro-3"
    ,
    defaultText
        .center()
        .print()
    ,
    newText("Instructions-4", "<p>Great! Now that you know how it works, the experiment can begin. Click the button to start the experiment.</p>")
        .center()
        .print()
    ,
    newButton("Start experiment!")
        .center()
        .print()
        .wait()
    )

// Experimental trials

Template("dummy_materials_270524.csv", row =>
    newTrial("Experiment",
        defaultText
            .center()
            .print("center at 50vw", "middle at 50vh"),
        
        // Self-paced reading
        newController("DashedSentence", {s: `${row.Sentence}`, display: "in place", hideUnderscores: true})
            .css("white-space", "nowrap")
            .center()
            .print()
            .log()
            .wait(),
        
        // Conditionally display comprehension question
        ...(row.Question === "Yes" ? [
            newText(`<p>${row.QuestionSentence}</p>`)
                .css("font-size", "1.4em")
                .print(),
            newText("key-info", "Press F for FALSE and J for TRUE")
                .print(),
            newKey("keypress-question", "F,J")
                .log()
                .wait()
        ] : [])
    )
    .log("Figure", row.Figure)
    .log("Context", row.Context)
    .log("Group", row.Group)
    .log("Condition", row.Condition)
    .log("CorrectResponse", row.CorrectResponse)
    .log("hasQuestion", row.Question === "Yes")
);


